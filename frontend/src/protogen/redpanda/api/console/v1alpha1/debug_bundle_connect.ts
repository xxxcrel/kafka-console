// @generated by protoc-gen-connect-es v1.2.0 with parameter "target=ts,import_extension="
// @generated from file redpanda/api/console/v1alpha1/debug_bundle.proto (package redpanda.api.console.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CancelDebugBundleProcessRequest, CancelDebugBundleProcessResponse, CreateDebugBundleRequest, CreateDebugBundleResponse, DeleteDebugBundleFileRequest, DeleteDebugBundleFileResponse, GetClusterHealthRequest, GetClusterHealthResponse, GetDebugBundleStatusRequest, GetDebugBundleStatusResponse } from "./debug_bundle_pb";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service redpanda.api.console.v1alpha1.DebugBundleService
 */
export const DebugBundleService = {
  typeName: "redpanda.api.console.v1alpha1.DebugBundleService",
  methods: {
    /**
     * @generated from rpc redpanda.api.console.v1alpha1.DebugBundleService.GetClusterHealth
     */
    getClusterHealth: {
      name: "GetClusterHealth",
      I: GetClusterHealthRequest,
      O: GetClusterHealthResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc redpanda.api.console.v1alpha1.DebugBundleService.CreateDebugBundle
     */
    createDebugBundle: {
      name: "CreateDebugBundle",
      I: CreateDebugBundleRequest,
      O: CreateDebugBundleResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc redpanda.api.console.v1alpha1.DebugBundleService.GetDebugBundleStatus
     */
    getDebugBundleStatus: {
      name: "GetDebugBundleStatus",
      I: GetDebugBundleStatusRequest,
      O: GetDebugBundleStatusResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc redpanda.api.console.v1alpha1.DebugBundleService.CancelDebugBundleProcess
     */
    cancelDebugBundleProcess: {
      name: "CancelDebugBundleProcess",
      I: CancelDebugBundleProcessRequest,
      O: CancelDebugBundleProcessResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc redpanda.api.console.v1alpha1.DebugBundleService.DeleteDebugBundleFile
     */
    deleteDebugBundleFile: {
      name: "DeleteDebugBundleFile",
      I: DeleteDebugBundleFileRequest,
      O: DeleteDebugBundleFileResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

