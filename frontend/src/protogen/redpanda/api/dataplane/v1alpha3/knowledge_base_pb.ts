// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file redpanda/api/dataplane/v1alpha3/knowledge_base.proto (package redpanda.api.dataplane.v1alpha3, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb";
import { file_google_api_field_behavior } from "../../../../google/api/field_behavior_pb";
import { file_google_api_resource } from "../../../../google/api/resource_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../../protoc-gen-openapiv2/options/annotations_pb";
import { file_redpanda_api_auth_v1_authorization } from "../../auth/v1/authorization_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file redpanda/api/dataplane/v1alpha3/knowledge_base.proto.
 */
export const file_redpanda_api_dataplane_v1alpha3_knowledge_base: GenFile = /*@__PURE__*/
  fileDesc("", [file_buf_validate_validate, file_google_api_annotations, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_field_mask, file_protoc_gen_openapiv2_options_annotations, file_redpanda_api_auth_v1_authorization]);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBase
 */
export type KnowledgeBase = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBase"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBase.VectorDatabase vector_database = 4;
   */
  vectorDatabase?: KnowledgeBase_VectorDatabase;

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBase.EmbeddingGenerator embedding_generator = 5;
   */
  embeddingGenerator?: KnowledgeBase_EmbeddingGenerator;

  /**
   * @generated from field: string retrieval_api_url = 6;
   */
  retrievalApiUrl: string;

  /**
   * Optional list of tags to attach to a pipeline.
   *
   * @generated from field: map<string, string> tags = 7;
   */
  tags: { [key: string]: string };

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBase.Indexer indexer = 8;
   */
  indexer?: KnowledgeBase_Indexer;

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBase.Retriever retriever = 9;
   */
  retriever?: KnowledgeBase_Retriever;

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBase.Generation generation = 10;
   */
  generation?: KnowledgeBase_Generation;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBase.
 * Use `create(KnowledgeBaseSchema)` to create a new message.
 */
export const KnowledgeBaseSchema: GenMessage<KnowledgeBase> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBase.VectorDatabase
 */
export type KnowledgeBase_VectorDatabase = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBase.VectorDatabase"> & {
  /**
   * @generated from oneof redpanda.api.dataplane.v1alpha3.KnowledgeBase.VectorDatabase.vector_database
   */
  vectorDatabase: {
    /**
     * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBase.VectorDatabase.Postgres postgres = 1;
     */
    value: KnowledgeBase_VectorDatabase_Postgres;
    case: "postgres";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBase.VectorDatabase.
 * Use `create(KnowledgeBase_VectorDatabaseSchema)` to create a new message.
 */
export const KnowledgeBase_VectorDatabaseSchema: GenMessage<KnowledgeBase_VectorDatabase> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 0, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBase.VectorDatabase.Postgres
 */
export type KnowledgeBase_VectorDatabase_Postgres = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBase.VectorDatabase.Postgres"> & {
  /**
   * @generated from field: string dsn = 1;
   */
  dsn: string;

  /**
   * @generated from field: string table = 2;
   */
  table: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBase.VectorDatabase.Postgres.
 * Use `create(KnowledgeBase_VectorDatabase_PostgresSchema)` to create a new message.
 */
export const KnowledgeBase_VectorDatabase_PostgresSchema: GenMessage<KnowledgeBase_VectorDatabase_Postgres> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 0, 0, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBase.EmbeddingGenerator
 */
export type KnowledgeBase_EmbeddingGenerator = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBase.EmbeddingGenerator"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBase.EmbeddingGenerator.Provider provider = 1;
   */
  provider?: KnowledgeBase_EmbeddingGenerator_Provider;

  /**
   * @generated from field: int32 dimensions = 2;
   */
  dimensions: number;

  /**
   * @generated from field: string model = 3;
   */
  model: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBase.EmbeddingGenerator.
 * Use `create(KnowledgeBase_EmbeddingGeneratorSchema)` to create a new message.
 */
export const KnowledgeBase_EmbeddingGeneratorSchema: GenMessage<KnowledgeBase_EmbeddingGenerator> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 0, 1);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBase.EmbeddingGenerator.Provider
 */
export type KnowledgeBase_EmbeddingGenerator_Provider = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBase.EmbeddingGenerator.Provider"> & {
  /**
   * @generated from oneof redpanda.api.dataplane.v1alpha3.KnowledgeBase.EmbeddingGenerator.Provider.provider
   */
  provider: {
    /**
     * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBase.EmbeddingGenerator.Provider.OpenAI openai = 1;
     */
    value: KnowledgeBase_EmbeddingGenerator_Provider_OpenAI;
    case: "openai";
  } | {
    /**
     * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBase.EmbeddingGenerator.Provider.Cohere cohere = 2;
     */
    value: KnowledgeBase_EmbeddingGenerator_Provider_Cohere;
    case: "cohere";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBase.EmbeddingGenerator.Provider.
 * Use `create(KnowledgeBase_EmbeddingGenerator_ProviderSchema)` to create a new message.
 */
export const KnowledgeBase_EmbeddingGenerator_ProviderSchema: GenMessage<KnowledgeBase_EmbeddingGenerator_Provider> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 0, 1, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBase.EmbeddingGenerator.Provider.OpenAI
 */
export type KnowledgeBase_EmbeddingGenerator_Provider_OpenAI = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBase.EmbeddingGenerator.Provider.OpenAI"> & {
  /**
   * @generated from field: string api_key = 1;
   */
  apiKey: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBase.EmbeddingGenerator.Provider.OpenAI.
 * Use `create(KnowledgeBase_EmbeddingGenerator_Provider_OpenAISchema)` to create a new message.
 */
export const KnowledgeBase_EmbeddingGenerator_Provider_OpenAISchema: GenMessage<KnowledgeBase_EmbeddingGenerator_Provider_OpenAI> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 0, 1, 0, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBase.EmbeddingGenerator.Provider.Cohere
 */
export type KnowledgeBase_EmbeddingGenerator_Provider_Cohere = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBase.EmbeddingGenerator.Provider.Cohere"> & {
  /**
   * @generated from field: string base_url = 1;
   */
  baseUrl: string;

  /**
   * @generated from field: string api_key = 2;
   */
  apiKey: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBase.EmbeddingGenerator.Provider.Cohere.
 * Use `create(KnowledgeBase_EmbeddingGenerator_Provider_CohereSchema)` to create a new message.
 */
export const KnowledgeBase_EmbeddingGenerator_Provider_CohereSchema: GenMessage<KnowledgeBase_EmbeddingGenerator_Provider_Cohere> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 0, 1, 0, 1);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBase.Indexer
 */
export type KnowledgeBase_Indexer = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBase.Indexer"> & {
  /**
   * @generated from field: int32 chunk_size = 1;
   */
  chunkSize: number;

  /**
   * @generated from field: int32 chunk_overlap = 2;
   */
  chunkOverlap: number;

  /**
   * @generated from field: string redpanda_username = 3;
   */
  redpandaUsername: string;

  /**
   * @generated from field: string redpanda_password = 4;
   */
  redpandaPassword: string;

  /**
   * @generated from field: repeated string input_topics = 5;
   */
  inputTopics: string[];
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBase.Indexer.
 * Use `create(KnowledgeBase_IndexerSchema)` to create a new message.
 */
export const KnowledgeBase_IndexerSchema: GenMessage<KnowledgeBase_Indexer> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 0, 2);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBase.Retriever
 */
export type KnowledgeBase_Retriever = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBase.Retriever"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBase.Retriever.Reranker reranker = 1;
   */
  reranker?: KnowledgeBase_Retriever_Reranker;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBase.Retriever.
 * Use `create(KnowledgeBase_RetrieverSchema)` to create a new message.
 */
export const KnowledgeBase_RetrieverSchema: GenMessage<KnowledgeBase_Retriever> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 0, 3);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBase.Retriever.Reranker
 */
export type KnowledgeBase_Retriever_Reranker = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBase.Retriever.Reranker"> & {
  /**
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBase.Retriever.Reranker.Provider provider = 2;
   */
  provider?: KnowledgeBase_Retriever_Reranker_Provider;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBase.Retriever.Reranker.
 * Use `create(KnowledgeBase_Retriever_RerankerSchema)` to create a new message.
 */
export const KnowledgeBase_Retriever_RerankerSchema: GenMessage<KnowledgeBase_Retriever_Reranker> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 0, 3, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBase.Retriever.Reranker.Provider
 */
export type KnowledgeBase_Retriever_Reranker_Provider = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBase.Retriever.Reranker.Provider"> & {
  /**
   * @generated from oneof redpanda.api.dataplane.v1alpha3.KnowledgeBase.Retriever.Reranker.Provider.provider
   */
  provider: {
    /**
     * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBase.Retriever.Reranker.Provider.Cohere cohere = 1;
     */
    value: KnowledgeBase_Retriever_Reranker_Provider_Cohere;
    case: "cohere";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBase.Retriever.Reranker.Provider.
 * Use `create(KnowledgeBase_Retriever_Reranker_ProviderSchema)` to create a new message.
 */
export const KnowledgeBase_Retriever_Reranker_ProviderSchema: GenMessage<KnowledgeBase_Retriever_Reranker_Provider> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 0, 3, 0, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBase.Retriever.Reranker.Provider.Cohere
 */
export type KnowledgeBase_Retriever_Reranker_Provider_Cohere = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBase.Retriever.Reranker.Provider.Cohere"> & {
  /**
   * @generated from field: string api_key = 2;
   */
  apiKey: string;

  /**
   * @generated from field: string model = 3;
   */
  model: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBase.Retriever.Reranker.Provider.Cohere.
 * Use `create(KnowledgeBase_Retriever_Reranker_Provider_CohereSchema)` to create a new message.
 */
export const KnowledgeBase_Retriever_Reranker_Provider_CohereSchema: GenMessage<KnowledgeBase_Retriever_Reranker_Provider_Cohere> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 0, 3, 0, 0, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBase.Generation
 */
export type KnowledgeBase_Generation = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBase.Generation"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBase.Generation.Provider provider = 1;
   */
  provider?: KnowledgeBase_Generation_Provider;

  /**
   * @generated from field: string model = 2;
   */
  model: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBase.Generation.
 * Use `create(KnowledgeBase_GenerationSchema)` to create a new message.
 */
export const KnowledgeBase_GenerationSchema: GenMessage<KnowledgeBase_Generation> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 0, 4);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBase.Generation.Provider
 */
export type KnowledgeBase_Generation_Provider = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBase.Generation.Provider"> & {
  /**
   * @generated from oneof redpanda.api.dataplane.v1alpha3.KnowledgeBase.Generation.Provider.provider
   */
  provider: {
    /**
     * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBase.Generation.Provider.OpenAI openai = 1;
     */
    value: KnowledgeBase_Generation_Provider_OpenAI;
    case: "openai";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBase.Generation.Provider.
 * Use `create(KnowledgeBase_Generation_ProviderSchema)` to create a new message.
 */
export const KnowledgeBase_Generation_ProviderSchema: GenMessage<KnowledgeBase_Generation_Provider> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 0, 4, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBase.Generation.Provider.OpenAI
 */
export type KnowledgeBase_Generation_Provider_OpenAI = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBase.Generation.Provider.OpenAI"> & {
  /**
   * @generated from field: string api_key = 1;
   */
  apiKey: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBase.Generation.Provider.OpenAI.
 * Use `create(KnowledgeBase_Generation_Provider_OpenAISchema)` to create a new message.
 */
export const KnowledgeBase_Generation_Provider_OpenAISchema: GenMessage<KnowledgeBase_Generation_Provider_OpenAI> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 0, 4, 0, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate
 */
export type KnowledgeBaseCreate = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate"> & {
  /**
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.VectorDatabase vector_database = 3;
   */
  vectorDatabase?: KnowledgeBaseCreate_VectorDatabase;

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.EmbeddingGenerator embedding_generator = 4;
   */
  embeddingGenerator?: KnowledgeBaseCreate_EmbeddingGenerator;

  /**
   * Optional list of tags to attach to a pipeline.
   *
   * @generated from field: map<string, string> tags = 5;
   */
  tags: { [key: string]: string };

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Indexer indexer = 6;
   */
  indexer?: KnowledgeBaseCreate_Indexer;

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Retriever retriever = 7;
   */
  retriever?: KnowledgeBaseCreate_Retriever;

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Generation generation = 8;
   */
  generation?: KnowledgeBaseCreate_Generation;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.
 * Use `create(KnowledgeBaseCreateSchema)` to create a new message.
 */
export const KnowledgeBaseCreateSchema: GenMessage<KnowledgeBaseCreate> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 1);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.VectorDatabase
 */
export type KnowledgeBaseCreate_VectorDatabase = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.VectorDatabase"> & {
  /**
   * @generated from oneof redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.VectorDatabase.vector_database
   */
  vectorDatabase: {
    /**
     * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.VectorDatabase.Postgres postgres = 1;
     */
    value: KnowledgeBaseCreate_VectorDatabase_Postgres;
    case: "postgres";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.VectorDatabase.
 * Use `create(KnowledgeBaseCreate_VectorDatabaseSchema)` to create a new message.
 */
export const KnowledgeBaseCreate_VectorDatabaseSchema: GenMessage<KnowledgeBaseCreate_VectorDatabase> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 1, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.VectorDatabase.Postgres
 */
export type KnowledgeBaseCreate_VectorDatabase_Postgres = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.VectorDatabase.Postgres"> & {
  /**
   * @generated from field: string dsn = 1;
   */
  dsn: string;

  /**
   * @generated from field: string table = 2;
   */
  table: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.VectorDatabase.Postgres.
 * Use `create(KnowledgeBaseCreate_VectorDatabase_PostgresSchema)` to create a new message.
 */
export const KnowledgeBaseCreate_VectorDatabase_PostgresSchema: GenMessage<KnowledgeBaseCreate_VectorDatabase_Postgres> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 1, 0, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.EmbeddingGenerator
 */
export type KnowledgeBaseCreate_EmbeddingGenerator = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.EmbeddingGenerator"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.EmbeddingGenerator.Provider provider = 1;
   */
  provider?: KnowledgeBaseCreate_EmbeddingGenerator_Provider;

  /**
   * @generated from field: int32 dimensions = 2;
   */
  dimensions: number;

  /**
   * @generated from field: string model = 3;
   */
  model: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.EmbeddingGenerator.
 * Use `create(KnowledgeBaseCreate_EmbeddingGeneratorSchema)` to create a new message.
 */
export const KnowledgeBaseCreate_EmbeddingGeneratorSchema: GenMessage<KnowledgeBaseCreate_EmbeddingGenerator> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 1, 1);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.EmbeddingGenerator.Provider
 */
export type KnowledgeBaseCreate_EmbeddingGenerator_Provider = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.EmbeddingGenerator.Provider"> & {
  /**
   * @generated from oneof redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.EmbeddingGenerator.Provider.provider
   */
  provider: {
    /**
     * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.EmbeddingGenerator.Provider.OpenAI openai = 1;
     */
    value: KnowledgeBaseCreate_EmbeddingGenerator_Provider_OpenAI;
    case: "openai";
  } | {
    /**
     * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.EmbeddingGenerator.Provider.Cohere cohere = 2;
     */
    value: KnowledgeBaseCreate_EmbeddingGenerator_Provider_Cohere;
    case: "cohere";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.EmbeddingGenerator.Provider.
 * Use `create(KnowledgeBaseCreate_EmbeddingGenerator_ProviderSchema)` to create a new message.
 */
export const KnowledgeBaseCreate_EmbeddingGenerator_ProviderSchema: GenMessage<KnowledgeBaseCreate_EmbeddingGenerator_Provider> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 1, 1, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.EmbeddingGenerator.Provider.OpenAI
 */
export type KnowledgeBaseCreate_EmbeddingGenerator_Provider_OpenAI = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.EmbeddingGenerator.Provider.OpenAI"> & {
  /**
   * @generated from field: string api_key = 1;
   */
  apiKey: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.EmbeddingGenerator.Provider.OpenAI.
 * Use `create(KnowledgeBaseCreate_EmbeddingGenerator_Provider_OpenAISchema)` to create a new message.
 */
export const KnowledgeBaseCreate_EmbeddingGenerator_Provider_OpenAISchema: GenMessage<KnowledgeBaseCreate_EmbeddingGenerator_Provider_OpenAI> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 1, 1, 0, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.EmbeddingGenerator.Provider.Cohere
 */
export type KnowledgeBaseCreate_EmbeddingGenerator_Provider_Cohere = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.EmbeddingGenerator.Provider.Cohere"> & {
  /**
   * @generated from field: string base_url = 1;
   */
  baseUrl: string;

  /**
   * @generated from field: string api_key = 2;
   */
  apiKey: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.EmbeddingGenerator.Provider.Cohere.
 * Use `create(KnowledgeBaseCreate_EmbeddingGenerator_Provider_CohereSchema)` to create a new message.
 */
export const KnowledgeBaseCreate_EmbeddingGenerator_Provider_CohereSchema: GenMessage<KnowledgeBaseCreate_EmbeddingGenerator_Provider_Cohere> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 1, 1, 0, 1);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Indexer
 */
export type KnowledgeBaseCreate_Indexer = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Indexer"> & {
  /**
   * @generated from field: int32 chunk_size = 1;
   */
  chunkSize: number;

  /**
   * @generated from field: int32 chunk_overlap = 2;
   */
  chunkOverlap: number;

  /**
   * @generated from field: string redpanda_username = 3;
   */
  redpandaUsername: string;

  /**
   * @generated from field: string redpanda_password = 4;
   */
  redpandaPassword: string;

  /**
   * @generated from field: repeated string input_topics = 5;
   */
  inputTopics: string[];
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Indexer.
 * Use `create(KnowledgeBaseCreate_IndexerSchema)` to create a new message.
 */
export const KnowledgeBaseCreate_IndexerSchema: GenMessage<KnowledgeBaseCreate_Indexer> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 1, 2);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Retriever
 */
export type KnowledgeBaseCreate_Retriever = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Retriever"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Retriever.Reranker reranker = 1;
   */
  reranker?: KnowledgeBaseCreate_Retriever_Reranker;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Retriever.
 * Use `create(KnowledgeBaseCreate_RetrieverSchema)` to create a new message.
 */
export const KnowledgeBaseCreate_RetrieverSchema: GenMessage<KnowledgeBaseCreate_Retriever> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 1, 3);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Retriever.Reranker
 */
export type KnowledgeBaseCreate_Retriever_Reranker = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Retriever.Reranker"> & {
  /**
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Retriever.Reranker.Provider provider = 2;
   */
  provider?: KnowledgeBaseCreate_Retriever_Reranker_Provider;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Retriever.Reranker.
 * Use `create(KnowledgeBaseCreate_Retriever_RerankerSchema)` to create a new message.
 */
export const KnowledgeBaseCreate_Retriever_RerankerSchema: GenMessage<KnowledgeBaseCreate_Retriever_Reranker> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 1, 3, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Retriever.Reranker.Provider
 */
export type KnowledgeBaseCreate_Retriever_Reranker_Provider = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Retriever.Reranker.Provider"> & {
  /**
   * @generated from oneof redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Retriever.Reranker.Provider.provider
   */
  provider: {
    /**
     * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Retriever.Reranker.Provider.Cohere cohere = 1;
     */
    value: KnowledgeBaseCreate_Retriever_Reranker_Provider_Cohere;
    case: "cohere";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Retriever.Reranker.Provider.
 * Use `create(KnowledgeBaseCreate_Retriever_Reranker_ProviderSchema)` to create a new message.
 */
export const KnowledgeBaseCreate_Retriever_Reranker_ProviderSchema: GenMessage<KnowledgeBaseCreate_Retriever_Reranker_Provider> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 1, 3, 0, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Retriever.Reranker.Provider.Cohere
 */
export type KnowledgeBaseCreate_Retriever_Reranker_Provider_Cohere = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Retriever.Reranker.Provider.Cohere"> & {
  /**
   * @generated from field: string api_key = 2;
   */
  apiKey: string;

  /**
   * @generated from field: string model = 3;
   */
  model: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Retriever.Reranker.Provider.Cohere.
 * Use `create(KnowledgeBaseCreate_Retriever_Reranker_Provider_CohereSchema)` to create a new message.
 */
export const KnowledgeBaseCreate_Retriever_Reranker_Provider_CohereSchema: GenMessage<KnowledgeBaseCreate_Retriever_Reranker_Provider_Cohere> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 1, 3, 0, 0, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Generation
 */
export type KnowledgeBaseCreate_Generation = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Generation"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Generation.Provider provider = 1;
   */
  provider?: KnowledgeBaseCreate_Generation_Provider;

  /**
   * @generated from field: string model = 2;
   */
  model: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Generation.
 * Use `create(KnowledgeBaseCreate_GenerationSchema)` to create a new message.
 */
export const KnowledgeBaseCreate_GenerationSchema: GenMessage<KnowledgeBaseCreate_Generation> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 1, 4);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Generation.Provider
 */
export type KnowledgeBaseCreate_Generation_Provider = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Generation.Provider"> & {
  /**
   * @generated from oneof redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Generation.Provider.provider
   */
  provider: {
    /**
     * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Generation.Provider.OpenAI openai = 1;
     */
    value: KnowledgeBaseCreate_Generation_Provider_OpenAI;
    case: "openai";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Generation.Provider.
 * Use `create(KnowledgeBaseCreate_Generation_ProviderSchema)` to create a new message.
 */
export const KnowledgeBaseCreate_Generation_ProviderSchema: GenMessage<KnowledgeBaseCreate_Generation_Provider> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 1, 4, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Generation.Provider.OpenAI
 */
export type KnowledgeBaseCreate_Generation_Provider_OpenAI = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Generation.Provider.OpenAI"> & {
  /**
   * @generated from field: string api_key = 1;
   */
  apiKey: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate.Generation.Provider.OpenAI.
 * Use `create(KnowledgeBaseCreate_Generation_Provider_OpenAISchema)` to create a new message.
 */
export const KnowledgeBaseCreate_Generation_Provider_OpenAISchema: GenMessage<KnowledgeBaseCreate_Generation_Provider_OpenAI> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 1, 4, 0, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate
 */
export type KnowledgeBaseUpdate = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate"> & {
  /**
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.VectorDatabase vector_database = 3;
   */
  vectorDatabase?: KnowledgeBaseUpdate_VectorDatabase;

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.EmbeddingGenerator embedding_generator = 4;
   */
  embeddingGenerator?: KnowledgeBaseUpdate_EmbeddingGenerator;

  /**
   * Optional list of tags to attach to a pipeline.
   *
   * @generated from field: map<string, string> tags = 5;
   */
  tags: { [key: string]: string };

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Indexer indexer = 6;
   */
  indexer?: KnowledgeBaseUpdate_Indexer;

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Retriever retriever = 7;
   */
  retriever?: KnowledgeBaseUpdate_Retriever;

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Generation generation = 8;
   */
  generation?: KnowledgeBaseUpdate_Generation;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.
 * Use `create(KnowledgeBaseUpdateSchema)` to create a new message.
 */
export const KnowledgeBaseUpdateSchema: GenMessage<KnowledgeBaseUpdate> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 2);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.VectorDatabase
 */
export type KnowledgeBaseUpdate_VectorDatabase = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.VectorDatabase"> & {
  /**
   * @generated from oneof redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.VectorDatabase.vector_database
   */
  vectorDatabase: {
    /**
     * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.VectorDatabase.Postgres postgres = 1;
     */
    value: KnowledgeBaseUpdate_VectorDatabase_Postgres;
    case: "postgres";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.VectorDatabase.
 * Use `create(KnowledgeBaseUpdate_VectorDatabaseSchema)` to create a new message.
 */
export const KnowledgeBaseUpdate_VectorDatabaseSchema: GenMessage<KnowledgeBaseUpdate_VectorDatabase> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 2, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.VectorDatabase.Postgres
 */
export type KnowledgeBaseUpdate_VectorDatabase_Postgres = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.VectorDatabase.Postgres"> & {
  /**
   * @generated from field: string dsn = 1;
   */
  dsn: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.VectorDatabase.Postgres.
 * Use `create(KnowledgeBaseUpdate_VectorDatabase_PostgresSchema)` to create a new message.
 */
export const KnowledgeBaseUpdate_VectorDatabase_PostgresSchema: GenMessage<KnowledgeBaseUpdate_VectorDatabase_Postgres> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 2, 0, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.EmbeddingGenerator
 */
export type KnowledgeBaseUpdate_EmbeddingGenerator = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.EmbeddingGenerator"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.EmbeddingGenerator.Provider provider = 1;
   */
  provider?: KnowledgeBaseUpdate_EmbeddingGenerator_Provider;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.EmbeddingGenerator.
 * Use `create(KnowledgeBaseUpdate_EmbeddingGeneratorSchema)` to create a new message.
 */
export const KnowledgeBaseUpdate_EmbeddingGeneratorSchema: GenMessage<KnowledgeBaseUpdate_EmbeddingGenerator> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 2, 1);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.EmbeddingGenerator.Provider
 */
export type KnowledgeBaseUpdate_EmbeddingGenerator_Provider = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.EmbeddingGenerator.Provider"> & {
  /**
   * @generated from oneof redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.EmbeddingGenerator.Provider.provider
   */
  provider: {
    /**
     * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.EmbeddingGenerator.Provider.OpenAI openai = 1;
     */
    value: KnowledgeBaseUpdate_EmbeddingGenerator_Provider_OpenAI;
    case: "openai";
  } | {
    /**
     * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.EmbeddingGenerator.Provider.Cohere cohere = 2;
     */
    value: KnowledgeBaseUpdate_EmbeddingGenerator_Provider_Cohere;
    case: "cohere";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.EmbeddingGenerator.Provider.
 * Use `create(KnowledgeBaseUpdate_EmbeddingGenerator_ProviderSchema)` to create a new message.
 */
export const KnowledgeBaseUpdate_EmbeddingGenerator_ProviderSchema: GenMessage<KnowledgeBaseUpdate_EmbeddingGenerator_Provider> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 2, 1, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.EmbeddingGenerator.Provider.OpenAI
 */
export type KnowledgeBaseUpdate_EmbeddingGenerator_Provider_OpenAI = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.EmbeddingGenerator.Provider.OpenAI"> & {
  /**
   * @generated from field: string api_key = 1;
   */
  apiKey: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.EmbeddingGenerator.Provider.OpenAI.
 * Use `create(KnowledgeBaseUpdate_EmbeddingGenerator_Provider_OpenAISchema)` to create a new message.
 */
export const KnowledgeBaseUpdate_EmbeddingGenerator_Provider_OpenAISchema: GenMessage<KnowledgeBaseUpdate_EmbeddingGenerator_Provider_OpenAI> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 2, 1, 0, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.EmbeddingGenerator.Provider.Cohere
 */
export type KnowledgeBaseUpdate_EmbeddingGenerator_Provider_Cohere = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.EmbeddingGenerator.Provider.Cohere"> & {
  /**
   * @generated from field: string base_url = 1;
   */
  baseUrl: string;

  /**
   * @generated from field: string api_key = 2;
   */
  apiKey: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.EmbeddingGenerator.Provider.Cohere.
 * Use `create(KnowledgeBaseUpdate_EmbeddingGenerator_Provider_CohereSchema)` to create a new message.
 */
export const KnowledgeBaseUpdate_EmbeddingGenerator_Provider_CohereSchema: GenMessage<KnowledgeBaseUpdate_EmbeddingGenerator_Provider_Cohere> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 2, 1, 0, 1);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Indexer
 */
export type KnowledgeBaseUpdate_Indexer = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Indexer"> & {
  /**
   * @generated from field: int32 chunk_size = 1;
   */
  chunkSize: number;

  /**
   * @generated from field: int32 chunk_overlap = 2;
   */
  chunkOverlap: number;

  /**
   * @generated from field: string redpanda_username = 3;
   */
  redpandaUsername: string;

  /**
   * @generated from field: string redpanda_password = 4;
   */
  redpandaPassword: string;

  /**
   * @generated from field: repeated string input_topics = 5;
   */
  inputTopics: string[];
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Indexer.
 * Use `create(KnowledgeBaseUpdate_IndexerSchema)` to create a new message.
 */
export const KnowledgeBaseUpdate_IndexerSchema: GenMessage<KnowledgeBaseUpdate_Indexer> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 2, 2);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Retriever
 */
export type KnowledgeBaseUpdate_Retriever = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Retriever"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Retriever.Reranker reranker = 1;
   */
  reranker?: KnowledgeBaseUpdate_Retriever_Reranker;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Retriever.
 * Use `create(KnowledgeBaseUpdate_RetrieverSchema)` to create a new message.
 */
export const KnowledgeBaseUpdate_RetrieverSchema: GenMessage<KnowledgeBaseUpdate_Retriever> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 2, 3);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Retriever.Reranker
 */
export type KnowledgeBaseUpdate_Retriever_Reranker = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Retriever.Reranker"> & {
  /**
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Retriever.Reranker.Provider provider = 2;
   */
  provider?: KnowledgeBaseUpdate_Retriever_Reranker_Provider;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Retriever.Reranker.
 * Use `create(KnowledgeBaseUpdate_Retriever_RerankerSchema)` to create a new message.
 */
export const KnowledgeBaseUpdate_Retriever_RerankerSchema: GenMessage<KnowledgeBaseUpdate_Retriever_Reranker> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 2, 3, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Retriever.Reranker.Provider
 */
export type KnowledgeBaseUpdate_Retriever_Reranker_Provider = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Retriever.Reranker.Provider"> & {
  /**
   * @generated from oneof redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Retriever.Reranker.Provider.provider
   */
  provider: {
    /**
     * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Retriever.Reranker.Provider.Cohere cohere = 1;
     */
    value: KnowledgeBaseUpdate_Retriever_Reranker_Provider_Cohere;
    case: "cohere";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Retriever.Reranker.Provider.
 * Use `create(KnowledgeBaseUpdate_Retriever_Reranker_ProviderSchema)` to create a new message.
 */
export const KnowledgeBaseUpdate_Retriever_Reranker_ProviderSchema: GenMessage<KnowledgeBaseUpdate_Retriever_Reranker_Provider> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 2, 3, 0, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Retriever.Reranker.Provider.Cohere
 */
export type KnowledgeBaseUpdate_Retriever_Reranker_Provider_Cohere = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Retriever.Reranker.Provider.Cohere"> & {
  /**
   * @generated from field: string api_key = 2;
   */
  apiKey: string;

  /**
   * @generated from field: string model = 3;
   */
  model: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Retriever.Reranker.Provider.Cohere.
 * Use `create(KnowledgeBaseUpdate_Retriever_Reranker_Provider_CohereSchema)` to create a new message.
 */
export const KnowledgeBaseUpdate_Retriever_Reranker_Provider_CohereSchema: GenMessage<KnowledgeBaseUpdate_Retriever_Reranker_Provider_Cohere> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 2, 3, 0, 0, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Generation
 */
export type KnowledgeBaseUpdate_Generation = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Generation"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Generation.Provider provider = 1;
   */
  provider?: KnowledgeBaseUpdate_Generation_Provider;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Generation.
 * Use `create(KnowledgeBaseUpdate_GenerationSchema)` to create a new message.
 */
export const KnowledgeBaseUpdate_GenerationSchema: GenMessage<KnowledgeBaseUpdate_Generation> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 2, 4);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Generation.Provider
 */
export type KnowledgeBaseUpdate_Generation_Provider = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Generation.Provider"> & {
  /**
   * @generated from oneof redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Generation.Provider.provider
   */
  provider: {
    /**
     * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Generation.Provider.OpenAI openai = 1;
     */
    value: KnowledgeBaseUpdate_Generation_Provider_OpenAI;
    case: "openai";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Generation.Provider.
 * Use `create(KnowledgeBaseUpdate_Generation_ProviderSchema)` to create a new message.
 */
export const KnowledgeBaseUpdate_Generation_ProviderSchema: GenMessage<KnowledgeBaseUpdate_Generation_Provider> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 2, 4, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Generation.Provider.OpenAI
 */
export type KnowledgeBaseUpdate_Generation_Provider_OpenAI = Message<"redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Generation.Provider.OpenAI"> & {
  /**
   * @generated from field: string api_key = 1;
   */
  apiKey: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate.Generation.Provider.OpenAI.
 * Use `create(KnowledgeBaseUpdate_Generation_Provider_OpenAISchema)` to create a new message.
 */
export const KnowledgeBaseUpdate_Generation_Provider_OpenAISchema: GenMessage<KnowledgeBaseUpdate_Generation_Provider_OpenAI> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 2, 4, 0, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.CreateKnowledgeBaseRequest
 */
export type CreateKnowledgeBaseRequest = Message<"redpanda.api.dataplane.v1alpha3.CreateKnowledgeBaseRequest"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseCreate knowledge_base = 1;
   */
  knowledgeBase?: KnowledgeBaseCreate;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.CreateKnowledgeBaseRequest.
 * Use `create(CreateKnowledgeBaseRequestSchema)` to create a new message.
 */
export const CreateKnowledgeBaseRequestSchema: GenMessage<CreateKnowledgeBaseRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 3);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.CreateKnowledgeBaseResponse
 */
export type CreateKnowledgeBaseResponse = Message<"redpanda.api.dataplane.v1alpha3.CreateKnowledgeBaseResponse"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBase knowledge_base = 1;
   */
  knowledgeBase?: KnowledgeBase;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.CreateKnowledgeBaseResponse.
 * Use `create(CreateKnowledgeBaseResponseSchema)` to create a new message.
 */
export const CreateKnowledgeBaseResponseSchema: GenMessage<CreateKnowledgeBaseResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 4);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.GetKnowledgeBaseRequest
 */
export type GetKnowledgeBaseRequest = Message<"redpanda.api.dataplane.v1alpha3.GetKnowledgeBaseRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.GetKnowledgeBaseRequest.
 * Use `create(GetKnowledgeBaseRequestSchema)` to create a new message.
 */
export const GetKnowledgeBaseRequestSchema: GenMessage<GetKnowledgeBaseRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 5);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.GetKnowledgeBaseResponse
 */
export type GetKnowledgeBaseResponse = Message<"redpanda.api.dataplane.v1alpha3.GetKnowledgeBaseResponse"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBase knowledge_base = 1;
   */
  knowledgeBase?: KnowledgeBase;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.GetKnowledgeBaseResponse.
 * Use `create(GetKnowledgeBaseResponseSchema)` to create a new message.
 */
export const GetKnowledgeBaseResponseSchema: GenMessage<GetKnowledgeBaseResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 6);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.ListKnowledgeBasesRequest
 */
export type ListKnowledgeBasesRequest = Message<"redpanda.api.dataplane.v1alpha3.ListKnowledgeBasesRequest"> & {
  /**
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.ListKnowledgeBasesRequest.Filter filter = 3;
   */
  filter?: ListKnowledgeBasesRequest_Filter;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.ListKnowledgeBasesRequest.
 * Use `create(ListKnowledgeBasesRequestSchema)` to create a new message.
 */
export const ListKnowledgeBasesRequestSchema: GenMessage<ListKnowledgeBasesRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 7);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.ListKnowledgeBasesRequest.Filter
 */
export type ListKnowledgeBasesRequest_Filter = Message<"redpanda.api.dataplane.v1alpha3.ListKnowledgeBasesRequest.Filter"> & {
  /**
   * Substring match on pipeline name. Case-sensitive.
   *
   * @generated from field: string name_contains = 1;
   */
  nameContains: string;

  /**
   * Filter pipelines that contain all of these key/value pairs.
   *
   * @generated from field: map<string, string> tags = 2;
   */
  tags: { [key: string]: string };
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.ListKnowledgeBasesRequest.Filter.
 * Use `create(ListKnowledgeBasesRequest_FilterSchema)` to create a new message.
 */
export const ListKnowledgeBasesRequest_FilterSchema: GenMessage<ListKnowledgeBasesRequest_Filter> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 7, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.ListKnowledgeBasesResponse
 */
export type ListKnowledgeBasesResponse = Message<"redpanda.api.dataplane.v1alpha3.ListKnowledgeBasesResponse"> & {
  /**
   * @generated from field: repeated redpanda.api.dataplane.v1alpha3.KnowledgeBase knowledge_bases = 1;
   */
  knowledgeBases: KnowledgeBase[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.ListKnowledgeBasesResponse.
 * Use `create(ListKnowledgeBasesResponseSchema)` to create a new message.
 */
export const ListKnowledgeBasesResponseSchema: GenMessage<ListKnowledgeBasesResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 8);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.UpdateKnowledgeBaseRequest
 */
export type UpdateKnowledgeBaseRequest = Message<"redpanda.api.dataplane.v1alpha3.UpdateKnowledgeBaseRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBaseUpdate knowledge_base = 2;
   */
  knowledgeBase?: KnowledgeBaseUpdate;

  /**
   * @generated from field: google.protobuf.FieldMask update_mask = 3;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.UpdateKnowledgeBaseRequest.
 * Use `create(UpdateKnowledgeBaseRequestSchema)` to create a new message.
 */
export const UpdateKnowledgeBaseRequestSchema: GenMessage<UpdateKnowledgeBaseRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 9);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.UpdateKnowledgeBaseResponse
 */
export type UpdateKnowledgeBaseResponse = Message<"redpanda.api.dataplane.v1alpha3.UpdateKnowledgeBaseResponse"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha3.KnowledgeBase knowledge_base = 1;
   */
  knowledgeBase?: KnowledgeBase;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.UpdateKnowledgeBaseResponse.
 * Use `create(UpdateKnowledgeBaseResponseSchema)` to create a new message.
 */
export const UpdateKnowledgeBaseResponseSchema: GenMessage<UpdateKnowledgeBaseResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 10);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.DeleteKnowledgeBaseRequest
 */
export type DeleteKnowledgeBaseRequest = Message<"redpanda.api.dataplane.v1alpha3.DeleteKnowledgeBaseRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.DeleteKnowledgeBaseRequest.
 * Use `create(DeleteKnowledgeBaseRequestSchema)` to create a new message.
 */
export const DeleteKnowledgeBaseRequestSchema: GenMessage<DeleteKnowledgeBaseRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 11);

/**
 * @generated from message redpanda.api.dataplane.v1alpha3.DeleteKnowledgeBaseResponse
 */
export type DeleteKnowledgeBaseResponse = Message<"redpanda.api.dataplane.v1alpha3.DeleteKnowledgeBaseResponse"> & {
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha3.DeleteKnowledgeBaseResponse.
 * Use `create(DeleteKnowledgeBaseResponseSchema)` to create a new message.
 */
export const DeleteKnowledgeBaseResponseSchema: GenMessage<DeleteKnowledgeBaseResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 12);

/**
 * @generated from service redpanda.api.dataplane.v1alpha3.KnowledgeBaseService
 */
export const KnowledgeBaseService: GenService<{
  /**
   * @generated from rpc redpanda.api.dataplane.v1alpha3.KnowledgeBaseService.CreateKnowledgeBase
   */
  createKnowledgeBase: {
    methodKind: "unary";
    input: typeof CreateKnowledgeBaseRequestSchema;
    output: typeof CreateKnowledgeBaseResponseSchema;
  },
  /**
   * @generated from rpc redpanda.api.dataplane.v1alpha3.KnowledgeBaseService.GetKnowledgeBase
   */
  getKnowledgeBase: {
    methodKind: "unary";
    input: typeof GetKnowledgeBaseRequestSchema;
    output: typeof GetKnowledgeBaseResponseSchema;
  },
  /**
   * @generated from rpc redpanda.api.dataplane.v1alpha3.KnowledgeBaseService.ListKnowledgeBases
   */
  listKnowledgeBases: {
    methodKind: "unary";
    input: typeof ListKnowledgeBasesRequestSchema;
    output: typeof ListKnowledgeBasesResponseSchema;
  },
  /**
   * @generated from rpc redpanda.api.dataplane.v1alpha3.KnowledgeBaseService.UpdateKnowledgeBase
   */
  updateKnowledgeBase: {
    methodKind: "unary";
    input: typeof UpdateKnowledgeBaseRequestSchema;
    output: typeof UpdateKnowledgeBaseResponseSchema;
  },
  /**
   * @generated from rpc redpanda.api.dataplane.v1alpha3.KnowledgeBaseService.DeleteKnowledgeBase
   */
  deleteKnowledgeBase: {
    methodKind: "unary";
    input: typeof DeleteKnowledgeBaseRequestSchema;
    output: typeof DeleteKnowledgeBaseResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_redpanda_api_dataplane_v1alpha3_knowledge_base, 0);

