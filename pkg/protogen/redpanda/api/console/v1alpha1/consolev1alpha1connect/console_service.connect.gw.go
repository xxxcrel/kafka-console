// Code generated by protoc-gen-connect-gateway. DO NOT EDIT.
//
// Source: redpanda/api/console/v1alpha1/console_service.proto

package consolev1alpha1connect

import (
	context "context"
	fmt "fmt"

	runtime "github.com/grpc-ecosystem/grpc-gateway/v2/runtime"
	connect_gateway "go.vallahaye.net/connect-gateway"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"

	v1alpha1 "github.com/xxxcrel/kafka-console/pkg/protogen/redpanda/api/console/v1alpha1"
)

// ConsoleServiceGatewayServer implements the gRPC server API for the ConsoleService service.
type ConsoleServiceGatewayServer struct {
	v1alpha1.UnimplementedConsoleServiceServer
	publishMessage connect_gateway.UnaryHandler[v1alpha1.PublishMessageRequest, v1alpha1.PublishMessageResponse]
}

// NewConsoleServiceGatewayServer constructs a Connect-Gateway gRPC server for the ConsoleService
// service.
func NewConsoleServiceGatewayServer(svc ConsoleServiceHandler, opts ...connect_gateway.HandlerOption) *ConsoleServiceGatewayServer {
	return &ConsoleServiceGatewayServer{
		publishMessage: connect_gateway.NewUnaryHandler(ConsoleServicePublishMessageProcedure, svc.PublishMessage, opts...),
	}
}

func (s *ConsoleServiceGatewayServer) ListMessages(*v1alpha1.ListMessagesRequest, v1alpha1.ConsoleService_ListMessagesServer) error {
	return status.Error(codes.Unimplemented, "streaming calls are not yet supported in the in-process transport")
}

func (s *ConsoleServiceGatewayServer) PublishMessage(ctx context.Context, req *v1alpha1.PublishMessageRequest) (*v1alpha1.PublishMessageResponse, error) {
	return s.publishMessage(ctx, req)
}

// RegisterConsoleServiceHandlerGatewayServer registers the Connect handlers for the ConsoleService
// "svc" to "mux".
func RegisterConsoleServiceHandlerGatewayServer(mux *runtime.ServeMux, svc ConsoleServiceHandler, opts ...connect_gateway.HandlerOption) {
	if err := v1alpha1.RegisterConsoleServiceHandlerServer(context.TODO(), mux, NewConsoleServiceGatewayServer(svc, opts...)); err != nil {
		panic(fmt.Errorf("connect-gateway: %w", err))
	}
}
